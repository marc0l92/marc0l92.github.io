{"version":3,"sources":["GW2Api.js","Summary/SummaryElement.js","Summary/Summary.js","Details/RecipeDetails.js","Details/ItemDetails.js","App.js","index.js"],"names":["BASE_URL","itemsCache","recipesCache","recipeSearchesCache","commerceListingsCache","errorHandler","error","console","log","id","Promise","resolve","Axios","get","then","response","status","data","catch","SummaryElement","props","state","item","name","GW2Api","setState","this","className","isActive","description","type","onClick","changeActive","title","Component","Summary","items","map","activeItem","key","RecipeDetails","ingredientsDetails","ingredientsListings","recipe","ingredients","ingredient","item_id","prevState","Object","assign","disciplines","details","listings","count","sells","unit_price","quantity","ItemDetails","updateData","currentItem","recipes","bestInstantSell","buys","ITEM_IDS","App","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f89998db.chunk.js","sourcesContent":["import Axios from \"axios\"\r\n\r\nconst BASE_URL = 'https://api.guildwars2.com/v2';\r\nconst itemsCache = {};\r\nconst recipesCache = {};\r\nconst recipeSearchesCache = {};\r\nconst commerceListingsCache = {};\r\n\r\nfunction errorHandler(error) {\r\n    console.log(error);\r\n};\r\n\r\n\r\nexport default {\r\n    getItem(id) {\r\n        if (!(id in itemsCache)) {\r\n            itemsCache[id] = new Promise((resolve) => {\r\n                Axios.get(BASE_URL + '/items/' + id).then(response => {\r\n                    console.log(response);\r\n                    if (response && response.status === 200) {\r\n                        resolve(response.data);\r\n                    }\r\n                }).catch(errorHandler);\r\n            });\r\n        }\r\n        return itemsCache[id];\r\n    },\r\n\r\n    getRecipe(id) {\r\n        if (!(id in recipesCache)) {\r\n            recipesCache[id] = new Promise((resolve) => {\r\n                Axios.get(BASE_URL + '/recipes/' + id).then(response => {\r\n                    console.log(response);\r\n                    if (response && response.status === 200) {\r\n                        resolve(response.data);\r\n                    }\r\n                }).catch(errorHandler);\r\n            });\r\n        }\r\n        return recipesCache[id];\r\n    },\r\n\r\n    searchRecipe(id) {\r\n        if (!(id in recipeSearchesCache)) {\r\n            recipeSearchesCache[id] = new Promise((resolve) => {\r\n                Axios.get(BASE_URL + '/recipes/search?output=' + id).then(response => {\r\n                    console.log(response);\r\n                    if (response && response.status === 200) {\r\n                        resolve(response.data);\r\n                    }\r\n                }).catch(errorHandler);\r\n            });\r\n        }\r\n        return recipeSearchesCache[id];\r\n    },\r\n\r\n    getCommerceListings(id) {\r\n        if (!(id in commerceListingsCache)) {\r\n            commerceListingsCache[id] = new Promise((resolve) => {\r\n                Axios.get(BASE_URL + '/commerce/listings/' + id).then(response => {\r\n                    console.log(response);\r\n                    if (response && response.status === 200) {\r\n                        resolve(response.data);\r\n                    }\r\n                }).catch(errorHandler);\r\n            });\r\n        }\r\n        return commerceListingsCache[id];\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport GW2Api from '../GW2Api';\r\n\r\nexport default class SummaryElement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: props.item,\r\n            name: ''\r\n        };\r\n\r\n        GW2Api.getItem(this.state.id).then((data) => {\r\n            this.setState({\r\n                name: data.name\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { id, name } = this.state;\r\n        const className = \"list-group-item list-group-item-action\" + (this.props.isActive ? ' active' : '');\r\n        const description = name ? name : '#' + id\r\n        return (\r\n            <button type=\"button\" onClick={() => this.props.changeActive(id)} className={className} title={id}>{description}</button>\r\n        );\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport SummaryElement from './SummaryElement';\r\n\r\nexport default class Summary extends Component {\r\n    render() {\r\n        return (\r\n            <ul className=\"list-group\">\r\n                {this.props.items.map(item => {\r\n                    const isActive = (item === this.props.activeItem)\r\n                    return (\r\n                        <SummaryElement key={item} item={item} changeActive={this.props.changeActive} isActive={isActive} />\r\n                    );\r\n                })}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport GW2Api from '../GW2Api';\r\n\r\nexport default class RecipeDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ingredientsDetails: {},\r\n            ingredientsListings: {}\r\n        };\r\n        this.props.recipe.ingredients.map(ingredient => {\r\n            GW2Api.getItem(ingredient.item_id).then((data) => {\r\n                this.setState(prevState => {\r\n                    const state = Object.assign({}, prevState);\r\n                    state.ingredientsDetails[data.id] = data;\r\n                    return state;\r\n                });\r\n            });\r\n            GW2Api.getCommerceListings(ingredient.item_id).then((data) => {\r\n                this.setState(prevState => {\r\n                    const state = Object.assign({}, prevState);\r\n                    state.ingredientsListings[data.id] = data;\r\n                    return state;\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { disciplines, ingredients } = this.props.recipe;\r\n        const { ingredientsDetails, ingredientsListings } = this.state;\r\n        return (<div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm\"><label>Disciplines:</label> {disciplines}</div>\r\n            </div>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Id</th>\r\n                        <th>Name</th>\r\n                        <th>Quantity</th>\r\n                        <th>BestInstantBuy</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {ingredients.map(ingredient => {\r\n                        const { item_id } = ingredient;\r\n                        const details = ingredientsDetails[item_id];\r\n                        const listings = ingredientsListings[item_id];\r\n                        return (<tr key={item_id}>\r\n                            <td>{item_id}</td>\r\n                            <td>{details ? details.name : '-'}</td>\r\n                            <td>{ingredient.count}</td>\r\n                            <td>{listings ? listings.sells[0].unit_price + '$ x ' + listings.sells[0].quantity : '-'}</td>\r\n                        </tr>)\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>)\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport GW2Api from '../GW2Api';\r\nimport RecipeDetails from './RecipeDetails';\r\n\r\nexport default class ItemDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.item,\r\n            data: null,\r\n            recipes: []\r\n        };\r\n    }\r\n\r\n    updateData = () => {\r\n        if (this.props.item !== this.currentItem) {\r\n            this.currentItem = this.props.item;\r\n            this.state.recipes = [];\r\n            GW2Api.getItem(this.props.item).then((data) => {\r\n                this.setState({\r\n                    data: data\r\n                });\r\n            });\r\n            GW2Api.searchRecipe(this.props.item).then((recipes) => {\r\n                for (let key in recipes) {\r\n                    GW2Api.getRecipe(recipes[key]).then((recipe) => {\r\n                        // console.log(recipe);\r\n                        this.setState(prevState =>\r\n                            Object.assign({}, prevState, {\r\n                                recipes: [...prevState.recipes, recipe]\r\n                            })\r\n                        );\r\n                    });\r\n                }\r\n            });\r\n            GW2Api.getCommerceListings(this.props.item).then((data) => {\r\n                this.setState({\r\n                    listings: data\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        this.updateData();\r\n        if (this.state.data && this.state.listings) {\r\n            const { name, id, type } = this.state.data;\r\n            const bestInstantSell = this.state.listings.buys[0]\r\n            return (\r\n                <div>\r\n                    <h2>{name}</h2>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-3\"><label>Id:</label> {id}</div>\r\n                        <div className=\"col-sm-3\"><label>Type:</label> {type}</div>\r\n                        <div className=\"col-sm-3\"><label>Best Instant Sell:</label> {bestInstantSell.unit_price}$ x {bestInstantSell.quantity}</div>\r\n                    </div>\r\n                    <h3>Recipes</h3>\r\n                    {this.state.recipes.map(recipe => <RecipeDetails key={recipe.id} recipe={recipe} />)}\r\n                </div>\r\n            );\r\n        } else {\r\n            return (<div>\r\n                <h2>Loading #{this.props.item}...</h2>\r\n            </div>);\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport Summary from './Summary/Summary';\nimport ItemDetails from './Details/ItemDetails';\n\nconst ITEM_IDS = [12178, 12192, 12209];\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeItem: ITEM_IDS[0]\n    };\n  }\n\n  changeActive = (item) => {\n    this.setState({\n      activeItem: item\n    });\n  }\n\n  render() {\n    const {activeItem} = this.state;\n    return (\n      <div className=\"App\">\n        <nav className=\"navbar navbar-light bg-light\">\n          <a className=\"navbar-brand\" href=\"/\">GW2 Trading</a>\n        </nav>\n\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-sm-3 overflow-auto\">\n              <Summary items={ITEM_IDS} activeItem={activeItem} changeActive={this.changeActive} />\n            </div>\n            <div className=\"col-sm\">\n              <ItemDetails item={activeItem} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}